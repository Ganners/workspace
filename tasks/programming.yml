- name: Install Programming Languages & Tools
  apt:
    pkg:
    - make
    - gcc
    - clang
    - gdb
    - nasm
    - ghc
    - nodejs
    - npm
    - python3
    - openjdk-17-jdk
    - openjdk-17-jre
    - maven
    - protobuf-compiler

- name: Install Radare2
  apt:
    deb: https://github.com/radareorg/radare2/releases/download/5.9.6/radare2_5.9.6_arm64.deb


- name: Install Python-based utilities
  apt:
    name:
      - python3-pip
      - python3-gpg
      - python3-wheel
      - python-wheel-common
      - python-is-python3
      - python3-venv
    state: present
    update_cache: yes

- name: Install Python packages in virtual environment
  pip:
    virtualenv: "{{ home }}/.venv"
    virtualenv_python: python3.13
    name:
      - setuptools==75.3.0
      - torch==2.5.1
      - tensorflow==2.18.0
      - scikit-learn==1.5.2
      - scipy==1.14.1
      - pandas==2.2.3
      - numpy==2.1.3
      - matplotlib==3.9.2
      - flake8==7.1.1
      - metaflow==2.8.3
      - jupyter==1.1.1
      - jupyterlab==4.3.0
      - gimme-aws-creds==2.8.2
      - pip-tools==2.0.1

- name: Install headers
  apt:
    pkg:
    - libxext-dev
    - libopenal-dev
    - libqt5webkit5
    - libxi-dev
    - libxinerama-dev
    - libxcursor-dev
    - xorg-dev

- name: Install jdtls
  block:
    - name: Create jdtls directory
      file:
        path: /usr/local/jdtls
        state: directory
        mode: "775"

    - name: Install eclipse.jdt.ls
      unarchive:
        src: https://www.eclipse.org/downloads/download.php?file=/jdtls/milestones/1.41.0/jdt-language-server-1.41.0-202410311350.tar.gz
        dest: /usr/local/jdtls
        remote_src: true
        mode: "775"

- name: Cofigure maven settings
  block:
    - name: Create go install directory
      file:
        path: "{{ home }}/.m2"
        owner: "{{ user }}"
        group: "{{ user }}"
        state: directory
        mode: "775"

    - name: Copy maven settings
      copy:
        dest: "{{ home }}/.m2/settings.xml"
        owner: "{{ user }}"
        group: "{{ user }}"
        mode: "700"
        content: '{{ maven_settings.file_contents }}'

- name: Install latest Golang
  block:
    - name: Create go install directory
      file:
        path: /usr/local/go
        state: directory
        mode: "775"

    - name: Download and unarchive golang installation
      unarchive:
        src: https://go.dev/dl/go1.23.2.linux-arm64.tar.gz
        dest: /usr/local
        remote_src: true
        mode: "775"

    - name: Create symbolic link to /usr/bin/go
      file:
        src: /usr/local/go/bin/go
        dest: /usr/bin/go
        state: link

    - name: Ensure permissions on go
      file:
        dest: "{{ home }}/go"
        state: directory
        owner: "{{ user }}"
        group: "{{ user }}"
        mode: "774"
        recurse: true
