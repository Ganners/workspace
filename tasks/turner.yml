- name: copy ssh config
  copy:
    dest: "{{ home }}/.ssh/config"
    owner: "{{ user }}"
    group: "{{ user }}"
    mode: "600"
    content: |
      Host *
        AddKeysToAgent yes
        IdentityFile ~/.ssh/id_rsa

- name: install tfenv version
  shell:
    cmd: '{{ home }}/.tfenv/bin/tfenv install 0.12.24'

- name: ensure tfenv versions have correct directory permissions
  file:
    path: "{{ home }}/.tfenv/versions/"
    owner: "{{ user }}"
    group: "{{ user }}"
    mode: "774"
    recurse: yes

- name: use install tfenv version
  shell:
    cmd: '{{ home }}/.tfenv/bin/tfenv use 0.12.24'

- name: Install programs
  apt:
    pkg:
    - alien

- name: fetch snowflake rpm
  get_url:
    url: https://sfc-repo.snowflakecomputing.com/snowsql/bootstrap/1.2/linux_x86_64/snowflake-snowsql-1.2.9-1.x86_64.rpm
    dest: '{{ home }}/Downloads/snowflake-snowsql-1.2.9-1.x86_64.rpm'

- name: install snowsql rpm with alien
  shell:
    cmd: 'alien -i {{ home }}/Downloads/snowflake-snowsql-1.2.9-1.x86_64.rpm'

- name: ensure .snowsql directory exists
  file:
    dest: "{{ home }}/.snowsql"
    state: directory
    owner: "{{ user }}"
    group: "{{ user }}"
    mode: "700"

- name: configure snowsql connection
  copy:
    dest: "{{ home }}/.snowsql/config"
    owner: "{{ user }}"
    group: "{{ user }}"
    mode: "700"
    content: '{{ snowsql.config }}'

- name: ensure .metaflowconfig directory exists
  file:
    dest: "{{ home }}/.metaflowconfig"
    state: directory
    owner: "{{ user }}"
    group: "{{ user }}"
    mode: "700"

- name: configure metaflow config
  copy:
    dest: "{{ home }}/.metaflowconfig/config_terraform.json"
    owner: "{{ user }}"
    group: "{{ user }}"
    mode: "700"
    content: '{{ metaflowconfig.config_terraform }}'

- name: configure okta config
  copy:
    dest: "{{ home }}/.okta_aws_login_config"
    owner: "{{ user }}"
    group: "{{ user }}"
    mode: "700"
    content: '{{ aws_okta_login_config.file_contents }}'

- name: install teams
  apt:
    deb: https://go.microsoft.com/fwlink/p/?LinkID=2112886&clcid=0x809&culture=en-gb&country=GB

- name: install webex
  apt:
    deb: https://binaries.webex.com/WebexDesktop-Ubuntu-Official-Package/Webex.deb

- name: download global protect
  unarchive:
    src: https://vpn.wisc.edu/clients/PanGPLinux-5.3.2-c3.tgz
    dest: /tmp
    remote_src: yes

- name: install global protect
  command: "dpkg -i /tmp/GlobalProtect_deb-5.3.2.0-3.deb"
